Originally I was planning one using a very flat DB strucure with separate nodes for each function
users, houses, chores, supplies, etc.

But that seems like a lot of work! I'd have to create joins and then do a lot of cross referencing
for every action.

If I did a semi-flat structure
users, houses

then stored all of a given houses data in that house node, it wouldn't substantially increase
the depth of that node. There just isn't that much data to be passed around in this app.



ADDING A MEMBER:

Have admin send a code. The code can be the pushId of the house, or something else, like a code generated by another
API. If it's the pushId of the house, then the admin must approve - that's an extra step. An expiring code from another
API would be easier from the users POV.
